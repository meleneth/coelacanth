1 CentralDispatch -> runs processes and notices when ports come back available because of clean vs not responding shutdown
1 GameBrowserServer -> Allows client connection to login, can transfer you to a WorldServer
5 WorldServer -> One Realm (spacestation)
many RoomServer -> dungeon etc

CentralDispatch should clean up child processes when it is killed

genclassfile machine central_dispatch connected dead -e heartbeat -e server_ready -e server_quit -e parse_packet
genclassfile machine world_server login welcome room_join recall -e heartbeat -e room_join -e login
genclassfile machine room_server start client_ready client_join -e heartbeat -e parse_packet -e recall

CentralDispatch - start all processes, keep track of which ports are active
---------------
<SERVEREADY token_id

<HEARTBEAT tick_id
(sends to all connected servers)
>HEARTBEAT tick_id

<SERVERQUIT token_id

WorldServer - Process initial user connections, introduce users to RoomServers and know which roomserver is the nexus
-----------

<LOGIN username password
(creates session linking port to username because password matched)
>(P) HELLO player_id
>(ACP) WELCOME player_id player_name

>(ACP) HEARTBEAT tick_id

>(ACP) ROOMOPEN room_id

<ROOMJOIN room_id
>(RS) RDYCLIENT player_id
<(SELF) CLIENTRDY player_id token_id
(to client)
>GOROOM token_id port_no

RoomServer
----------
>CLIENTRDY player_id token_id
<RDYCLIENT player_id new_token_id

>CLIENTJOIN player_id token_id

(all connected players)
>HEARTBEAT tick_id

>RECALL
